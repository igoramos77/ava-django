# Generated by Django 2.2.19 on 2021-06-11 05:21

import aplic.manager
import aplic.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_cryptography.fields
import stdimage.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('matricula', models.CharField(max_length=55, unique=True)),
                ('data_nascimento', models.DateField(blank=True, help_text='Formato DD/MM/AAAA', null=True, verbose_name='Data de nascimento')),
                ('foto', stdimage.models.StdImageField(blank=True, null=True, upload_to=aplic.models.get_file_path)),
                ('first_name', models.CharField(max_length=55, verbose_name='Nome')),
                ('last_name', models.CharField(max_length=155, verbose_name='Sobrenome')),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
                'ordering': ['id'],
            },
            managers=[
                ('objects', aplic.manager.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Arquivo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('doc', '.doc'), ('pdf', '.pdf')], max_length=100, verbose_name='Tipo')),
                ('nome_do_arquivo', models.FileField(upload_to='uploads/%Y/%m/%d/', verbose_name='Nome do Arquivo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Arquivo',
                'verbose_name_plural': 'Arquivos',
            },
        ),
        migrations.CreateModel(
            name='Avaliacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('Prova', 'Prova'), ('Trabalho', 'Trabalho')], max_length=20, verbose_name='Tipo')),
                ('composicao', models.CharField(choices=[('P1', 'P1'), ('P2', 'P2'), ('P3', 'P3')], max_length=3, verbose_name='Composição')),
                ('data_publicacao', models.DateField(help_text='Formato DD/MM/AAAA', verbose_name='Data Publicação')),
                ('data_entrega', models.DateField(help_text='Formato DD/MM/AAAA', verbose_name='Data de Entrega')),
                ('arquivo', models.FileField(upload_to='', verbose_name='Arquivo')),
                ('valor_avaliacao', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Valor Avaliação')),
                ('orientacoes', models.TextField(blank=True, max_length=500, verbose_name='Orientações')),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Avaliação',
                'verbose_name_plural': 'Avaliações',
            },
        ),
        migrations.CreateModel(
            name='Configuracoes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ano_currente', models.IntegerField(max_length=4, verbose_name='Ano currente')),
                ('semestre_currente', models.CharField(choices=[('1', '.1'), ('2', '.2')], max_length=2, verbose_name='Semestre')),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Configuração',
                'verbose_name_plural': 'Configurações',
            },
        ),
        migrations.CreateModel(
            name='Curso',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome')),
                ('descricao', models.TextField(max_length=500, verbose_name='Descricao')),
                ('carga_horaria', models.IntegerField(verbose_name='Carga Horária')),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Curso',
                'verbose_name_plural': 'Cursos',
            },
        ),
        migrations.CreateModel(
            name='Disciplina',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome')),
                ('carga_horaria', models.IntegerField(verbose_name='Carga Horária')),
                ('credito', models.IntegerField(verbose_name='Créditos')),
                ('obrigatoria', models.BooleanField(default=True, verbose_name='Obrigatória')),
                ('ementa', models.TextField(blank=True, max_length=500, verbose_name='Ementa')),
                ('bibliografia', models.TextField(blank=True, max_length=500, verbose_name='Bibliografia')),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('curso', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='aplic.Curso')),
            ],
            options={
                'verbose_name': 'Disciplina',
                'verbose_name_plural': 'Disciplinas',
            },
        ),
        migrations.CreateModel(
            name='Professor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome')),
                ('email', models.EmailField(max_length=200, verbose_name='E-mail')),
                ('senha', django_cryptography.fields.encrypt(models.CharField(max_length=50))),
                ('foto', stdimage.models.StdImageField(blank=True, null=True, upload_to=aplic.models.get_file_path)),
                ('lattes', models.CharField(blank=True, max_length=155, null=True, verbose_name='Curriculo Lattes')),
                ('facebook', models.CharField(blank=True, max_length=155, null=True, verbose_name='Facebook')),
                ('twitter', models.CharField(blank=True, max_length=155, null=True, verbose_name='Twitter')),
                ('instagram', models.CharField(blank=True, max_length=155, null=True, verbose_name='Instagram')),
                ('linkedin', models.CharField(blank=True, max_length=155, null=True, verbose_name='Linkedin')),
                ('titulacao', models.CharField(choices=[('Doutorado', 'Doutorado'), ('Mestrado', 'Mestrado'), ('Especialização', 'Especialização'), ('Graduação', 'Graduação')], max_length=100, verbose_name='Titulação')),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('curso', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='aplic.Curso')),
            ],
            options={
                'verbose_name': 'Professor',
                'verbose_name_plural': 'Professores',
            },
        ),
        migrations.CreateModel(
            name='Turma',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ano', models.IntegerField(verbose_name='Ano')),
                ('semestre', models.CharField(choices=[('1', '.1'), ('2', '.2')], max_length=2, verbose_name='Semestre')),
                ('periodo', models.CharField(choices=[('1', '1º'), ('2', '2º'), ('3', '3º'), ('4', '4º'), ('5', '5º'), ('6', '6º'), ('7', '7º'), ('8', '8º'), ('9', '9º'), ('10', '10º'), ('11', '11º'), ('12', '12º')], max_length=3, verbose_name='Período')),
                ('turma', models.CharField(max_length=10, verbose_name='Nome da Turma')),
                ('dia_da_semana', models.CharField(choices=[('1', 'Domingo'), ('2', 'Segunda-feira'), ('3', 'Terça-feira'), ('4', 'Quarta-feira'), ('5', 'Quinta-feira'), ('6', 'Sexta-feira'), ('7', 'Sábado')], max_length=13, verbose_name='Dia da Semana')),
                ('horario_de_inicio', models.TimeField(verbose_name='Horário de início')),
                ('horario_de_termino', models.TimeField(verbose_name='Horário de término')),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('alunos', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
                ('disciplina', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aplic.Disciplina')),
                ('professor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='aplic.Professor')),
            ],
            options={
                'verbose_name': 'Turma',
                'verbose_name_plural': 'Turmas',
            },
        ),
        migrations.CreateModel(
            name='Nota',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Nota')),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('aluno', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('avaliacao', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='aplic.Avaliacao')),
                ('turma', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='aplic.Turma')),
            ],
            options={
                'verbose_name': 'Nota',
                'verbose_name_plural': 'Notas',
            },
        ),
        migrations.AddField(
            model_name='avaliacao',
            name='turma',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='aplic.Turma'),
        ),
        migrations.AddField(
            model_name='usuario',
            name='curso',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='aplic.Curso'),
        ),
        migrations.AddField(
            model_name='usuario',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='usuario',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
